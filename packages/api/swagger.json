{
  "openapi": "3.0.1",
  "servers": [
    {
      "url": "http://localhost:37001",
      "description": "Local Server"
    }
  ],
  "info": {
    "version": "1.0.2",
    "title": "@samchon/bbs-backend",
    "description": "Backend for bbs",
    "license": {
      "name": "MIT"
    }
  },
  "paths": {
    "/bbs/articles": {
      "patch": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "description": "Request info of pagination and searching options.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IBbsArticle.IRequest"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "Paginated summarized articles.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIBbsArticle.ISummary"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "List up all summarized articles",
        "description": "List up all summarized articles.\n\nList up all summarized articles with pagination and searching options.",
        "x-nestia-namespace": "bbs.articles.index",
        "x-nestia-jsDocTags": [
          {
            "name": "param",
            "text": [
              {
                "text": "input",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "Request info of pagination and searching options.",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "Paginated summarized articles.",
                "kind": "text"
              }
            ]
          },
          {
            "name": "author",
            "text": [
              {
                "text": "Samchon",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "PATCH"
      },
      "post": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "description": "Article information to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IBbsArticle.ICreate"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "Newly created article.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IBbsArticle"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "Create a new article",
        "description": "Create a new article.\n\nCreate a new article with its first {@link IBbsArticle.ISnapshot snapshot}.",
        "x-nestia-namespace": "bbs.articles.create",
        "x-nestia-jsDocTags": [
          {
            "name": "param",
            "text": [
              {
                "text": "input",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "Article information to create.",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "Newly created article.",
                "kind": "text"
              }
            ]
          },
          {
            "name": "author",
            "text": [
              {
                "text": "Samchon",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "POST"
      }
    },
    "/bbs/articles/abridges": {
      "patch": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "description": "Request info of pagination and searching options.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IBbsArticle.IRequest"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "Paginated abridged articles.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIBbsArticle.IAbridge"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "List up all abridged articles",
        "description": "List up all abridged articles.\n\nList up all abridged articles with pagination and searching options.",
        "x-nestia-namespace": "bbs.articles.abridges.abridges",
        "x-nestia-jsDocTags": [
          {
            "name": "param",
            "text": [
              {
                "text": "input",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "Request info of pagination and searching options.",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "Paginated abridged articles.",
                "kind": "text"
              }
            ]
          },
          {
            "name": "author",
            "text": [
              {
                "text": "Samchon",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "PATCH"
      }
    },
    "/bbs/articles/{id}": {
      "get": {
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-typia-typeTags": [
                {
                  "target": "string",
                  "name": "Format<\"uuid\">",
                  "kind": "format",
                  "value": "uuid",
                  "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                  "exclusive": [
                    "format",
                    "pattern"
                  ]
                }
              ]
            },
            "description": "Target article's ",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Article information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IBbsArticle"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "Read individual article",
        "description": "Read individual article.\n\nReads an article with its every {@link IBbsArticle.ISnapshot snapshots}.",
        "x-nestia-namespace": "bbs.articles.at",
        "x-nestia-jsDocTags": [
          {
            "name": "param",
            "text": [
              {
                "text": "id",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "Target article's ",
                "kind": "text"
              },
              {
                "text": "{@link ",
                "kind": "link"
              },
              {
                "text": "IBbsArticle.id",
                "kind": "linkName",
                "target": {
                  "fileName": "D:/github/samchon/bbs-backend/src/api/structures/bbs/IBbsArticle.ts",
                  "textSpan": {
                    "start": 1358,
                    "length": 33
                  }
                }
              },
              {
                "text": "}",
                "kind": "link"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "Article information",
                "kind": "text"
              }
            ]
          },
          {
            "name": "author",
            "text": [
              {
                "text": "Samchon",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "GET"
      },
      "put": {
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-typia-typeTags": [
                {
                  "target": "string",
                  "name": "Format<\"uuid\">",
                  "kind": "format",
                  "value": "uuid",
                  "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                  "exclusive": [
                    "format",
                    "pattern"
                  ]
                }
              ]
            },
            "description": "Target article's ",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Article information to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IBbsArticle.IUpdate"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "Newly accumulated snapshot information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IBbsArticle.ISnapshot"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "Update an article",
        "description": "Update an article.\n\nAccumulate a new {@link IBbsArticle.ISnapshot snapshot} record to the article.",
        "x-nestia-namespace": "bbs.articles.update",
        "x-nestia-jsDocTags": [
          {
            "name": "param",
            "text": [
              {
                "text": "id",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "Target article's ",
                "kind": "text"
              },
              {
                "text": "{@link ",
                "kind": "link"
              },
              {
                "text": "IBbsArticle.id",
                "kind": "linkName",
                "target": {
                  "fileName": "D:/github/samchon/bbs-backend/src/api/structures/bbs/IBbsArticle.ts",
                  "textSpan": {
                    "start": 1358,
                    "length": 33
                  }
                }
              },
              {
                "text": "}",
                "kind": "link"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "input",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "Article information to update.",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "Newly accumulated snapshot information.",
                "kind": "text"
              }
            ]
          },
          {
            "name": "author",
            "text": [
              {
                "text": "Samchon",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "PUT"
      },
      "delete": {
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-typia-typeTags": [
                {
                  "target": "string",
                  "name": "Format<\"uuid\">",
                  "kind": "format",
                  "value": "uuid",
                  "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                  "exclusive": [
                    "format",
                    "pattern"
                  ]
                }
              ]
            },
            "description": "Target article's ",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Password of the article.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IBbsArticle.IErase"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "200": {
            "description": "",
            "x-nestia-encrypted": false
          }
        },
        "summary": "Erase an article",
        "description": "Erase an article.\n\nPerforms soft deletion to the article.",
        "x-nestia-namespace": "bbs.articles.erase",
        "x-nestia-jsDocTags": [
          {
            "name": "param",
            "text": [
              {
                "text": "id",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "Target article's ",
                "kind": "text"
              },
              {
                "text": "{@link ",
                "kind": "link"
              },
              {
                "text": "IBbsArticle.id",
                "kind": "linkName",
                "target": {
                  "fileName": "D:/github/samchon/bbs-backend/src/api/structures/bbs/IBbsArticle.ts",
                  "textSpan": {
                    "start": 1358,
                    "length": 33
                  }
                }
              },
              {
                "text": "}",
                "kind": "link"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "input",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "Password of the article.",
                "kind": "text"
              }
            ]
          },
          {
            "name": "author",
            "text": [
              {
                "text": "Samchon",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "DELETE"
      }
    },
    "/bbs/articles/{articleId}/comments": {
      "patch": {
        "tags": [],
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-typia-typeTags": [
                {
                  "target": "string",
                  "name": "Format<\"uuid\">",
                  "kind": "format",
                  "value": "uuid",
                  "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                  "exclusive": [
                    "format",
                    "pattern"
                  ]
                }
              ]
            },
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request info of pagination and searching options.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IBbsArticleComment.IRequest"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "Paginated summarized comments.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIBbsArticleComment"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "List up all summarized comments",
        "description": "List up all summarized comments.\n\nList up all summarized comments with pagination and searching options.",
        "x-nestia-namespace": "bbs.articles.comments.index",
        "x-nestia-jsDocTags": [
          {
            "name": "param",
            "text": [
              {
                "text": "input",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "Request info of pagination and searching options.",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "Paginated summarized comments.",
                "kind": "text"
              }
            ]
          },
          {
            "name": "author",
            "text": [
              {
                "text": "Samchon",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "PATCH"
      },
      "post": {
        "tags": [],
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-typia-typeTags": [
                {
                  "target": "string",
                  "name": "Format<\"uuid\">",
                  "kind": "format",
                  "value": "uuid",
                  "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                  "exclusive": [
                    "format",
                    "pattern"
                  ]
                }
              ]
            },
            "description": "Belonged article's ",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Comment information to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IBbsArticleComment.ICreate"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "Newly created comment.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IBbsArticleComment"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "Create a new comment",
        "description": "Create a new comment.\n\nCreate a new comment with its first {@link IBbsArticleComment.ISnapshot snapshot}.",
        "x-nestia-namespace": "bbs.articles.comments.create",
        "x-nestia-jsDocTags": [
          {
            "name": "param",
            "text": [
              {
                "text": "articleId",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "Belonged article's ",
                "kind": "text"
              },
              {
                "text": "{@link ",
                "kind": "link"
              },
              {
                "text": "IBbsArticle.id ",
                "kind": "linkText"
              },
              {
                "text": "}",
                "kind": "link"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "input",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "Comment information to create.",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "Newly created comment.",
                "kind": "text"
              }
            ]
          },
          {
            "name": "author",
            "text": [
              {
                "text": "Samchon",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "POST"
      }
    },
    "/bbs/articles/{articleId}/comments/{id}": {
      "get": {
        "tags": [],
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-typia-typeTags": [
                {
                  "target": "string",
                  "name": "Format<\"uuid\">",
                  "kind": "format",
                  "value": "uuid",
                  "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                  "exclusive": [
                    "format",
                    "pattern"
                  ]
                }
              ]
            },
            "description": "Belonged article's ",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-typia-typeTags": [
                {
                  "target": "string",
                  "name": "Format<\"uuid\">",
                  "kind": "format",
                  "value": "uuid",
                  "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                  "exclusive": [
                    "format",
                    "pattern"
                  ]
                }
              ]
            },
            "description": "Target comment's ",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Comment information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IBbsArticleComment"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "Read individual comment",
        "description": "Read individual comment.\n\nReads a comment with its every {@link IBbsArticleComment.ISnapshot snapshots}.",
        "x-nestia-namespace": "bbs.articles.comments.at",
        "x-nestia-jsDocTags": [
          {
            "name": "param",
            "text": [
              {
                "text": "articleId",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "Belonged article's ",
                "kind": "text"
              },
              {
                "text": "{@link ",
                "kind": "link"
              },
              {
                "text": "IBbsArticle.id ",
                "kind": "linkText"
              },
              {
                "text": "}",
                "kind": "link"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "id",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "Target comment's ",
                "kind": "text"
              },
              {
                "text": "{@link ",
                "kind": "link"
              },
              {
                "text": "IBbsArticleComment.id",
                "kind": "linkName",
                "target": {
                  "fileName": "D:/github/samchon/bbs-backend/src/api/structures/bbs/IBbsArticleComment.ts",
                  "textSpan": {
                    "start": 862,
                    "length": 33
                  }
                }
              },
              {
                "text": "}",
                "kind": "link"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "Comment information",
                "kind": "text"
              }
            ]
          },
          {
            "name": "author",
            "text": [
              {
                "text": "Samchon",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "GET"
      },
      "put": {
        "tags": [],
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-typia-typeTags": [
                {
                  "target": "string",
                  "name": "Format<\"uuid\">",
                  "kind": "format",
                  "value": "uuid",
                  "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                  "exclusive": [
                    "format",
                    "pattern"
                  ]
                }
              ]
            },
            "description": "Belonged article's ",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-typia-typeTags": [
                {
                  "target": "string",
                  "name": "Format<\"uuid\">",
                  "kind": "format",
                  "value": "uuid",
                  "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                  "exclusive": [
                    "format",
                    "pattern"
                  ]
                }
              ]
            },
            "description": "Target comment's ",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Comment information to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IBbsArticleComment.IUpdate"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "Newly accumulated snapshot information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IBbsArticleComment.ISnapshot"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "Update a comment",
        "description": "Update a comment.\n\nAccumulate a new {@link IBbsArticleComment.ISnapshot snapshot} record to the comment.",
        "x-nestia-namespace": "bbs.articles.comments.update",
        "x-nestia-jsDocTags": [
          {
            "name": "param",
            "text": [
              {
                "text": "articleId",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "Belonged article's ",
                "kind": "text"
              },
              {
                "text": "{@link ",
                "kind": "link"
              },
              {
                "text": "IBbsArticle.id ",
                "kind": "linkText"
              },
              {
                "text": "}",
                "kind": "link"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "id",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "Target comment's ",
                "kind": "text"
              },
              {
                "text": "{@link ",
                "kind": "link"
              },
              {
                "text": "IBbsArticleComment.id",
                "kind": "linkName",
                "target": {
                  "fileName": "D:/github/samchon/bbs-backend/src/api/structures/bbs/IBbsArticleComment.ts",
                  "textSpan": {
                    "start": 862,
                    "length": 33
                  }
                }
              },
              {
                "text": "}",
                "kind": "link"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "input",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "Comment information to update.",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "Newly accumulated snapshot information.",
                "kind": "text"
              }
            ]
          },
          {
            "name": "author",
            "text": [
              {
                "text": "Samchon",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "PUT"
      },
      "delete": {
        "tags": [],
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-typia-typeTags": [
                {
                  "target": "string",
                  "name": "Format<\"uuid\">",
                  "kind": "format",
                  "value": "uuid",
                  "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                  "exclusive": [
                    "format",
                    "pattern"
                  ]
                }
              ]
            },
            "description": "Belonged article's ",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-typia-typeTags": [
                {
                  "target": "string",
                  "name": "Format<\"uuid\">",
                  "kind": "format",
                  "value": "uuid",
                  "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                  "exclusive": [
                    "format",
                    "pattern"
                  ]
                }
              ]
            },
            "description": "Target comment's ",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Password of the comment.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IBbsArticleComment.IErase"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "200": {
            "description": "",
            "x-nestia-encrypted": false
          }
        },
        "summary": "Erase a comment",
        "description": "Erase a comment.\n\nPerforms soft deletion to the comment.",
        "x-nestia-namespace": "bbs.articles.comments.erase",
        "x-nestia-jsDocTags": [
          {
            "name": "param",
            "text": [
              {
                "text": "articleId",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "Belonged article's ",
                "kind": "text"
              },
              {
                "text": "{@link ",
                "kind": "link"
              },
              {
                "text": "IBbsArticle.id ",
                "kind": "linkText"
              },
              {
                "text": "}",
                "kind": "link"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "id",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "Target comment's ",
                "kind": "text"
              },
              {
                "text": "{@link ",
                "kind": "link"
              },
              {
                "text": "IBbsArticleComment.id",
                "kind": "linkName",
                "target": {
                  "fileName": "D:/github/samchon/bbs-backend/src/api/structures/bbs/IBbsArticleComment.ts",
                  "textSpan": {
                    "start": 862,
                    "length": 33
                  }
                }
              },
              {
                "text": "}",
                "kind": "link"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "input",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "Password of the comment.",
                "kind": "text"
              }
            ]
          },
          {
            "name": "author",
            "text": [
              {
                "text": "Samchon",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "DELETE"
      }
    },
    "/monitors/health": {
      "get": {
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "x-nestia-encrypted": false
          }
        },
        "x-nestia-namespace": "monitors.health.get",
        "x-nestia-jsDocTags": [],
        "x-nestia-method": "GET"
      }
    },
    "/monitors/performance": {
      "get": {
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPerformance"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "x-nestia-namespace": "monitors.performance.get",
        "x-nestia-jsDocTags": [],
        "x-nestia-method": "GET"
      }
    },
    "/monitors/system": {
      "get": {
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISystem"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "x-nestia-namespace": "monitors.system.get",
        "x-nestia-jsDocTags": [],
        "x-nestia-method": "GET"
      }
    }
  },
  "components": {
    "schemas": {
      "IBbsArticle.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IBbsArticle.IRequest.ISearch"
          },
          "sort": {
            "description": "Sort condition.",
            "x-typia-required": false,
            "x-typia-optional": true,
            "type": "array",
            "items": {
              "description": "Sort condition.",
              "x-typia-required": false,
              "x-typia-optional": true,
              "type": "string",
              "enum": [
                "-writer",
                "-title",
                "-created_at",
                "-updated_at",
                "+writer",
                "+title",
                "+created_at",
                "+updated_at"
              ]
            }
          },
          "page": {
            "description": "Page number.",
            "x-typia-required": false,
            "x-typia-optional": true,
            "type": "integer",
            "x-typia-typeTags": [
              {
                "target": "number",
                "name": "Type<\"uint32\">",
                "kind": "type",
                "value": "uint32",
                "validate": "Math.floor($input) === $input && 0 <= $input && $input <= 4294967295",
                "exclusive": true
              }
            ]
          },
          "limit": {
            "description": "Limitation of records per a page.",
            "x-typia-jsDocTags": [
              {
                "name": "default",
                "text": [
                  {
                    "text": "100",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": false,
            "x-typia-optional": true,
            "type": "integer",
            "x-typia-typeTags": [
              {
                "target": "number",
                "name": "Type<\"uint32\">",
                "kind": "type",
                "value": "uint32",
                "validate": "Math.floor($input) === $input && 0 <= $input && $input <= 4294967295",
                "exclusive": true
              }
            ],
            "default": 100
          }
        },
        "nullable": false,
        "x-typia-jsDocTags": []
      },
      "IBbsArticle.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "writer": {
            "x-typia-required": false,
            "x-typia-optional": true,
            "type": "string"
          },
          "title": {
            "x-typia-required": false,
            "x-typia-optional": true,
            "type": "string"
          },
          "body": {
            "x-typia-required": false,
            "x-typia-optional": true,
            "type": "string"
          },
          "title_or_body": {
            "x-typia-required": false,
            "x-typia-optional": true,
            "type": "string"
          },
          "from": {
            "x-typia-jsDocTags": [
              {
                "name": "format",
                "text": [
                  {
                    "text": "date-time",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": false,
            "x-typia-optional": true,
            "type": "string",
            "format": "date-time",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"date-time\">",
                "kind": "format",
                "value": "date-time",
                "validate": "!isNaN(new Date($input).getTime())",
                "exclusive": true
              }
            ]
          },
          "to": {
            "x-typia-jsDocTags": [
              {
                "name": "format",
                "text": [
                  {
                    "text": "date-time",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": false,
            "x-typia-optional": true,
            "type": "string",
            "format": "date-time",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"date-time\">",
                "kind": "format",
                "value": "date-time",
                "validate": "!isNaN(new Date($input).getTime())",
                "exclusive": true
              }
            ]
          }
        },
        "nullable": false,
        "description": "검색 정보.",
        "x-typia-jsDocTags": []
      },
      "IPageIBbsArticle.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination"
          },
          "data": {
            "description": "List of records.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IBbsArticle.ISummary"
            }
          }
        },
        "nullable": false,
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation.",
        "x-typia-jsDocTags": [
          {
            "name": "template",
            "text": [
              {
                "text": "T",
                "kind": "typeParameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "Record type",
                "kind": "text"
              }
            ]
          },
          {
            "name": "author",
            "text": [
              {
                "text": "Samchon",
                "kind": "text"
              }
            ]
          }
        ]
      },
      "IPage.IPagination": {
        "type": "object",
        "properties": {
          "current": {
            "description": "Current page number.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "integer",
            "x-typia-typeTags": [
              {
                "target": "number",
                "name": "Type<\"uint32\">",
                "kind": "type",
                "value": "uint32",
                "validate": "Math.floor($input) === $input && 0 <= $input && $input <= 4294967295",
                "exclusive": true
              }
            ]
          },
          "limit": {
            "description": "Limitation of records per a page.",
            "x-typia-jsDocTags": [
              {
                "name": "default",
                "text": [
                  {
                    "text": "100",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "integer",
            "x-typia-typeTags": [
              {
                "target": "number",
                "name": "Type<\"uint32\">",
                "kind": "type",
                "value": "uint32",
                "validate": "Math.floor($input) === $input && 0 <= $input && $input <= 4294967295",
                "exclusive": true
              }
            ],
            "default": 100
          },
          "records": {
            "description": "Total records in the database.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "integer",
            "x-typia-typeTags": [
              {
                "target": "number",
                "name": "Type<\"uint32\">",
                "kind": "type",
                "value": "uint32",
                "validate": "Math.floor($input) === $input && 0 <= $input && $input <= 4294967295",
                "exclusive": true
              }
            ]
          },
          "pages": {
            "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "integer",
            "x-typia-typeTags": [
              {
                "target": "number",
                "name": "Type<\"uint32\">",
                "kind": "type",
                "value": "uint32",
                "validate": "Math.floor($input) === $input && 0 <= $input && $input <= 4294967295",
                "exclusive": true
              }
            ]
          }
        },
        "nullable": false,
        "required": [
          "current",
          "limit",
          "records",
          "pages"
        ],
        "description": "Page information.",
        "x-typia-jsDocTags": []
      },
      "IBbsArticle.ISummary": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Primary Key.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "uuid",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"uuid\">",
                "kind": "format",
                "value": "uuid",
                "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          },
          "writer": {
            "description": "Writer of the article.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "title": {
            "description": "Title of the last snapshot.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "created_at": {
            "description": "Creation time of the article.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "date-time",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"date-time\">",
                "kind": "format",
                "value": "date-time",
                "validate": "!isNaN(new Date($input).getTime())",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          },
          "updated_at": {
            "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "date-time",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"date-time\">",
                "kind": "format",
                "value": "date-time",
                "validate": "!isNaN(new Date($input).getTime())",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          }
        },
        "nullable": false,
        "required": [
          "id",
          "writer",
          "title",
          "created_at",
          "updated_at"
        ],
        "description": "Summarized information of the article.",
        "x-typia-jsDocTags": []
      },
      "IPageIBbsArticle.IAbridge": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination"
          },
          "data": {
            "description": "List of records.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IBbsArticle.IAbridge"
            }
          }
        },
        "nullable": false,
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation.",
        "x-typia-jsDocTags": [
          {
            "name": "template",
            "text": [
              {
                "text": "T",
                "kind": "typeParameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "Record type",
                "kind": "text"
              }
            ]
          },
          {
            "name": "author",
            "text": [
              {
                "text": "Samchon",
                "kind": "text"
              }
            ]
          }
        ]
      },
      "IBbsArticle.IAbridge": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Primary Key.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "uuid",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"uuid\">",
                "kind": "format",
                "value": "uuid",
                "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          },
          "writer": {
            "description": "Writer of the article.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "title": {
            "description": "Title of the last snapshot.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "created_at": {
            "description": "Creation time of the article.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "date-time",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"date-time\">",
                "kind": "format",
                "value": "date-time",
                "validate": "!isNaN(new Date($input).getTime())",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          },
          "updated_at": {
            "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "date-time",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"date-time\">",
                "kind": "format",
                "value": "date-time",
                "validate": "!isNaN(new Date($input).getTime())",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          },
          "format": {
            "$ref": "#/components/schemas/IBbsArticle.Format"
          },
          "body": {
            "description": "Content body of article.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "files": {
            "description": "List of attachment files.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.IStore"
            }
          }
        },
        "nullable": false,
        "required": [
          "id",
          "writer",
          "title",
          "created_at",
          "updated_at",
          "format",
          "body",
          "files"
        ],
        "description": "Abriged information of the article.",
        "x-typia-jsDocTags": []
      },
      "IBbsArticle.Format": {
        "type": "string",
        "enum": [
          "txt",
          "md",
          "html"
        ]
      },
      "IAttachmentFile.IStore": {
        "type": "object",
        "properties": {
          "name": {
            "description": "File name, except extension.\n\nPossible to omit like `.gitignore` case.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "MinLength<1>",
                "kind": "minLength",
                "value": 1,
                "validate": "1 <= $input.length",
                "exclusive": true
              },
              {
                "target": "string",
                "name": "MaxLength<255>",
                "kind": "maxLength",
                "value": 255,
                "validate": "$input.length <= 255",
                "exclusive": true
              }
            ],
            "nullable": true
          },
          "extension": {
            "description": "Extension.\n\nPossible to omit like `README` case.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "maxLength": 8,
            "minLength": 1,
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "MinLength<1>",
                "kind": "minLength",
                "value": 1,
                "validate": "1 <= $input.length",
                "exclusive": true
              },
              {
                "target": "string",
                "name": "MaxLength<8>",
                "kind": "maxLength",
                "value": 8,
                "validate": "$input.length <= 8",
                "exclusive": true
              }
            ],
            "nullable": true
          },
          "url": {
            "description": "URL path of the real file.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "url",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"url\">",
                "kind": "format",
                "value": "url",
                "validate": "/^[a-zA-Z0-9]+:\\/\\/(?:www.)?[-a-zA-Z0-9@:%._+~#=]{1,256}.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_+.~#?&/=]*)$/.test($input)",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          }
        },
        "nullable": false,
        "required": [
          "name",
          "extension",
          "url"
        ],
        "x-typia-jsDocTags": []
      },
      "IBbsArticle": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Primary Key.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "uuid",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"uuid\">",
                "kind": "format",
                "value": "uuid",
                "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          },
          "writer": {
            "description": "Writer of article.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "snapshots": {
            "description": "List of snapshot contents.\n\nIt is created for the first time when an article is created, and is\naccumulated every time the article is modified.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IBbsArticle.ISnapshot"
            },
            "minItems": 1,
            "x-typia-typeTags": [
              {
                "target": "array",
                "name": "MinItems<1>",
                "kind": "minItems",
                "value": 1,
                "validate": "1 <= $input.length",
                "exclusive": true
              }
            ]
          },
          "created_at": {
            "description": "Creation time of article.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "date-time",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"date-time\">",
                "kind": "format",
                "value": "date-time",
                "validate": "!isNaN(new Date($input).getTime())",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          }
        },
        "nullable": false,
        "required": [
          "id",
          "writer",
          "snapshots",
          "created_at"
        ],
        "description": "Article entity.\n\n`IBbsArticle* is a super-type entity of all kinds of articles in the current\nbackend system, literally shaping individual articles of the bulletin board.\n\nAnd, as you can see, the elements that must inevitably exist in the article,\nsuch as the `title` or the `body`, do not exist in the `IBbsArticle`, but exist\nin the subsidiary entity, {@link IBbsArticle.ISnapshot }, as a 1: N relationship,\nwhich is because a new snapshot record is published every time the article is\nmodified.\n\nThe reason why a new snapshot record is published every time the article is\nmodified is to preserve the evidence. Due to the nature of e-community, there\nis always a threat of dispute among the participants. And it can happen that\ndisputes arise through articles or {@link IBbsArticleComment comments}, and to\nprevent such things as modifying existing articles to manipulate the situation,\nthe article is designed in this structure.\n\nIn other words, to keep evidence, and prevent fraud.",
        "x-typia-jsDocTags": [
          {
            "name": "template",
            "text": [
              {
                "text": "Snapshot",
                "kind": "typeParameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "Snapshot content type of the article",
                "kind": "text"
              }
            ]
          },
          {
            "name": "author",
            "text": [
              {
                "text": "Samchon",
                "kind": "text"
              }
            ]
          }
        ]
      },
      "IBbsArticle.ISnapshot": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Primary Key.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "uuid",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"uuid\">",
                "kind": "format",
                "value": "uuid",
                "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          },
          "created_at": {
            "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or article.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "date-time",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"date-time\">",
                "kind": "format",
                "value": "date-time",
                "validate": "!isNaN(new Date($input).getTime())",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          },
          "format": {
            "$ref": "#/components/schemas/IBbsArticle.Format"
          },
          "body": {
            "description": "Content body of article.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "files": {
            "description": "List of attachment files.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.IStore"
            }
          },
          "title": {
            "description": "Title of article.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "id",
          "created_at",
          "format",
          "body",
          "files",
          "title"
        ],
        "description": "Snapshot of article.\n\n`IBbsArticle.ISnapshot` is a snapshot entity that contains the contents of\nthe article, as mentioned in {@link IBbsArticle }, the contents of the article\nare separated from the article record to keep evidence and prevent fraud.",
        "x-typia-jsDocTags": []
      },
      "IBbsArticle.ICreate": {
        "type": "object",
        "properties": {
          "writer": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "format": {
            "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "enum": [
              "txt",
              "md",
              "html"
            ]
          },
          "title": {
            "description": "Title of article.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "body": {
            "description": "Content body of article.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "files": {
            "description": "List of attachment files.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.IStore"
            }
          },
          "password": {
            "description": "Password for modification.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "writer",
          "format",
          "title",
          "body",
          "files",
          "password"
        ],
        "description": "Store content type of the article.",
        "x-typia-jsDocTags": []
      },
      "IBbsArticle.IUpdate": {
        "type": "object",
        "properties": {
          "format": {
            "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "enum": [
              "txt",
              "md",
              "html"
            ]
          },
          "title": {
            "description": "Title of article.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "body": {
            "description": "Content body of article.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "files": {
            "description": "List of attachment files.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.IStore"
            }
          },
          "password": {
            "description": "Password for modification.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "format",
          "title",
          "body",
          "files",
          "password"
        ],
        "x-typia-jsDocTags": []
      },
      "IBbsArticle.IErase": {
        "type": "object",
        "properties": {
          "password": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "password"
        ],
        "x-typia-jsDocTags": []
      },
      "IBbsArticleComment.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IBbsArticleComment.IRequest.ISearch"
          },
          "sort": {
            "x-typia-required": false,
            "x-typia-optional": true,
            "type": "array",
            "items": {
              "x-typia-required": false,
              "x-typia-optional": true,
              "type": "string",
              "enum": [
                "-writer",
                "-created_at",
                "+writer",
                "+created_at"
              ]
            }
          },
          "page": {
            "description": "Page number.",
            "x-typia-required": false,
            "x-typia-optional": true,
            "type": "integer",
            "x-typia-typeTags": [
              {
                "target": "number",
                "name": "Type<\"uint32\">",
                "kind": "type",
                "value": "uint32",
                "validate": "Math.floor($input) === $input && 0 <= $input && $input <= 4294967295",
                "exclusive": true
              }
            ]
          },
          "limit": {
            "description": "Limitation of records per a page.",
            "x-typia-jsDocTags": [
              {
                "name": "default",
                "text": [
                  {
                    "text": "100",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": false,
            "x-typia-optional": true,
            "type": "integer",
            "x-typia-typeTags": [
              {
                "target": "number",
                "name": "Type<\"uint32\">",
                "kind": "type",
                "value": "uint32",
                "validate": "Math.floor($input) === $input && 0 <= $input && $input <= 4294967295",
                "exclusive": true
              }
            ],
            "default": 100
          }
        },
        "nullable": false,
        "x-typia-jsDocTags": []
      },
      "IBbsArticleComment.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "writer": {
            "x-typia-required": false,
            "x-typia-optional": true,
            "type": "string"
          },
          "body": {
            "x-typia-required": false,
            "x-typia-optional": true,
            "type": "string"
          }
        },
        "nullable": false,
        "x-typia-jsDocTags": []
      },
      "IPageIBbsArticleComment": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination"
          },
          "data": {
            "description": "List of records.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IBbsArticleComment"
            }
          }
        },
        "nullable": false,
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation.",
        "x-typia-jsDocTags": [
          {
            "name": "template",
            "text": [
              {
                "text": "T",
                "kind": "typeParameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "Record type",
                "kind": "text"
              }
            ]
          },
          {
            "name": "author",
            "text": [
              {
                "text": "Samchon",
                "kind": "text"
              }
            ]
          }
        ]
      },
      "IBbsArticleComment": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Primary Key.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "uuid",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"uuid\">",
                "kind": "format",
                "value": "uuid",
                "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          },
          "parent_id": {
            "description": "Parent comment's ID.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "uuid",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"uuid\">",
                "kind": "format",
                "value": "uuid",
                "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ],
            "nullable": true
          },
          "writer": {
            "description": "Writer of comment.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "snapshots": {
            "description": "List of snapshot contents.\n\nIt is created for the first time when a comment being created, and is\naccumulated every time the comment is modified.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IBbsArticleComment.ISnapshot"
            },
            "minItems": 1,
            "x-typia-typeTags": [
              {
                "target": "array",
                "name": "MinItems<1>",
                "kind": "minItems",
                "value": 1,
                "validate": "1 <= $input.length",
                "exclusive": true
              }
            ]
          },
          "created_at": {
            "description": "Creation time of comment.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "date-time",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"date-time\">",
                "kind": "format",
                "value": "date-time",
                "validate": "!isNaN(new Date($input).getTime())",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          }
        },
        "nullable": false,
        "required": [
          "id",
          "parent_id",
          "writer",
          "snapshots",
          "created_at"
        ],
        "description": "Comment written on an article.\n\n`IBbsArticleComment` is an entity that shapes the comments written on an article.\n\nAnd for this comment, as in the previous relationship between\n{@link IBbsArticle } and {@link IBbsArticle.ISnapshot }, the content body of the\ncomment is stored in the sub {@link IBbsArticleComment.ISnapshot } table for\nevidentialism, and a new snapshot record is issued every time the comment is modified.\n\nAlso, `IBbsArticleComment` is expressing the relationship of the hierarchical reply\nstructure through the {@link IBbsArticleComment.parent_id } attribute.",
        "x-typia-jsDocTags": [
          {
            "name": "author",
            "text": [
              {
                "text": "Samchon",
                "kind": "text"
              }
            ]
          }
        ]
      },
      "IBbsArticleComment.ISnapshot": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Primary Key.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "uuid",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"uuid\">",
                "kind": "format",
                "value": "uuid",
                "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          },
          "created_at": {
            "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "date-time",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"date-time\">",
                "kind": "format",
                "value": "date-time",
                "validate": "!isNaN(new Date($input).getTime())",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          },
          "format": {
            "$ref": "#/components/schemas/IBbsArticleComment.Format"
          },
          "body": {
            "description": "Content body of comment.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "files": {
            "description": "List of attachment files.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.IStore"
            }
          }
        },
        "nullable": false,
        "required": [
          "id",
          "created_at",
          "format",
          "body",
          "files"
        ],
        "description": "Snapshot of comment.\n\n`IBbsArticleComment.ISnapshot` is a snapshot entity that contains\nthe contents of the comment.\n\nAs mentioned in {@link IBbsArticleComment }, designed to keep evidence\nand prevent fraud.",
        "x-typia-jsDocTags": []
      },
      "IBbsArticleComment.Format": {
        "type": "string",
        "enum": [
          "txt",
          "md",
          "html"
        ]
      },
      "IBbsArticleComment.ICreate": {
        "type": "object",
        "properties": {
          "writer": {
            "description": "Writer of comment.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "format": {
            "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "enum": [
              "txt",
              "md",
              "html"
            ]
          },
          "body": {
            "description": "Content body of comment.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "files": {
            "description": "List of attachment files.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.IStore"
            }
          },
          "password": {
            "description": "Password for modification.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "writer",
          "format",
          "body",
          "files",
          "password"
        ],
        "x-typia-jsDocTags": []
      },
      "IBbsArticleComment.IUpdate": {
        "type": "object",
        "properties": {
          "format": {
            "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "enum": [
              "txt",
              "md",
              "html"
            ]
          },
          "body": {
            "description": "Content body of comment.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "files": {
            "description": "List of attachment files.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.IStore"
            }
          },
          "password": {
            "description": "Password for modification.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "format",
          "body",
          "files",
          "password"
        ],
        "x-typia-jsDocTags": []
      },
      "IBbsArticleComment.IErase": {
        "type": "object",
        "properties": {
          "password": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "password"
        ],
        "x-typia-jsDocTags": []
      },
      "IPerformance": {
        "type": "object",
        "properties": {
          "cpu": {
            "$ref": "#/components/schemas/process.global.NodeJS.CpuUsage"
          },
          "memory": {
            "$ref": "#/components/schemas/process.global.NodeJS.MemoryUsage"
          },
          "resource": {
            "$ref": "#/components/schemas/process.global.NodeJS.ResourceUsage"
          }
        },
        "nullable": false,
        "required": [
          "cpu",
          "memory",
          "resource"
        ],
        "x-typia-jsDocTags": []
      },
      "process.global.NodeJS.CpuUsage": {
        "type": "object",
        "properties": {
          "user": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "system": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          }
        },
        "nullable": false,
        "required": [
          "user",
          "system"
        ],
        "x-typia-jsDocTags": []
      },
      "process.global.NodeJS.MemoryUsage": {
        "type": "object",
        "properties": {
          "rss": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "heapTotal": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "heapUsed": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "external": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "arrayBuffers": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          }
        },
        "nullable": false,
        "required": [
          "rss",
          "heapTotal",
          "heapUsed",
          "external",
          "arrayBuffers"
        ],
        "x-typia-jsDocTags": []
      },
      "process.global.NodeJS.ResourceUsage": {
        "type": "object",
        "properties": {
          "fsRead": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "fsWrite": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "involuntaryContextSwitches": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "ipcReceived": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "ipcSent": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "majorPageFault": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "maxRSS": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "minorPageFault": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "sharedMemorySize": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "signalsCount": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "swappedOut": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "systemCPUTime": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "unsharedDataSize": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "unsharedStackSize": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "userCPUTime": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "voluntaryContextSwitches": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          }
        },
        "nullable": false,
        "required": [
          "fsRead",
          "fsWrite",
          "involuntaryContextSwitches",
          "ipcReceived",
          "ipcSent",
          "majorPageFault",
          "maxRSS",
          "minorPageFault",
          "sharedMemorySize",
          "signalsCount",
          "swappedOut",
          "systemCPUTime",
          "unsharedDataSize",
          "unsharedStackSize",
          "userCPUTime",
          "voluntaryContextSwitches"
        ],
        "x-typia-jsDocTags": []
      },
      "ISystem": {
        "type": "object",
        "properties": {
          "uid": {
            "description": "Random Unique ID.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "arguments": {
            "description": "`process.argv`",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "description": "`process.argv`",
              "x-typia-required": true,
              "x-typia-optional": false,
              "type": "string"
            }
          },
          "commit": {
            "$ref": "#/components/schemas/ISystem.ICommit"
          },
          "package": {
            "$ref": "#/components/schemas/ISystem.IPackage"
          },
          "created_at": {
            "description": "Creation time of this server.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "uid",
          "arguments",
          "commit",
          "package",
          "created_at"
        ],
        "description": "System Information.",
        "x-typia-jsDocTags": [
          {
            "name": "author",
            "text": [
              {
                "text": "Samchon",
                "kind": "text"
              }
            ]
          }
        ]
      },
      "ISystem.ICommit": {
        "type": "object",
        "properties": {
          "shortHash": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "branch": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "hash": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "subject": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "sanitizedSubject": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "body": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "author": {
            "$ref": "#/components/schemas/ISystem.ICommit.IUser"
          },
          "committer": {
            "$ref": "#/components/schemas/ISystem.ICommit.IUser"
          },
          "authored_at": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "commited_at": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "notes": {
            "x-typia-required": false,
            "x-typia-optional": true,
            "type": "string"
          },
          "tags": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "x-typia-required": true,
              "x-typia-optional": false,
              "type": "string"
            }
          }
        },
        "nullable": false,
        "required": [
          "shortHash",
          "branch",
          "hash",
          "subject",
          "sanitizedSubject",
          "body",
          "author",
          "committer",
          "authored_at",
          "commited_at",
          "tags"
        ],
        "description": "Git commit info.",
        "x-typia-jsDocTags": []
      },
      "ISystem.ICommit.IUser": {
        "type": "object",
        "properties": {
          "name": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "email": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "name",
          "email"
        ],
        "description": "Git user account info.",
        "x-typia-jsDocTags": []
      },
      "ISystem.IPackage": {
        "type": "object",
        "properties": {
          "name": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "version": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "description": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "main": {
            "x-typia-required": false,
            "x-typia-optional": true,
            "type": "string"
          },
          "typings": {
            "x-typia-required": false,
            "x-typia-optional": true,
            "type": "string"
          },
          "scripts": {
            "$ref": "#/components/schemas/Recordstringstring"
          },
          "repository": {
            "$ref": "#/components/schemas/__type"
          },
          "author": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "license": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "bugs": {
            "$ref": "#/components/schemas/__type.o1"
          },
          "homepage": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "devDependencies": {
            "$ref": "#/components/schemas/Recordstringstring"
          },
          "dependencies": {
            "$ref": "#/components/schemas/Recordstringstring"
          },
          "publishConfig": {
            "$ref": "#/components/schemas/__type.o2"
          },
          "files": {
            "x-typia-required": false,
            "x-typia-optional": true,
            "type": "array",
            "items": {
              "x-typia-required": false,
              "x-typia-optional": true,
              "type": "string"
            }
          }
        },
        "nullable": false,
        "required": [
          "name",
          "version",
          "description",
          "scripts",
          "repository",
          "author",
          "license",
          "bugs",
          "homepage",
          "dependencies"
        ],
        "description": "NPM package info.",
        "x-typia-jsDocTags": []
      },
      "Recordstringstring": {
        "type": "object",
        "properties": {},
        "nullable": false,
        "description": "Construct a type with a set of properties K of type T",
        "x-typia-jsDocTags": [],
        "x-typia-additionalProperties": {
          "x-typia-required": true,
          "x-typia-optional": false,
          "type": "string"
        },
        "additionalProperties": {
          "x-typia-required": true,
          "x-typia-optional": false,
          "type": "string"
        }
      },
      "__type": {
        "type": "object",
        "properties": {
          "type": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "enum": [
              "git"
            ]
          },
          "url": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "type",
          "url"
        ],
        "x-typia-jsDocTags": []
      },
      "__type.o1": {
        "type": "object",
        "properties": {
          "url": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "url"
        ],
        "x-typia-jsDocTags": []
      },
      "__type.o2": {
        "type": "object",
        "properties": {
          "registry": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "registry"
        ],
        "x-typia-jsDocTags": []
      }
    }
  }
}